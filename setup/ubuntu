#!/usr/bin/env bash

set -e

DISTRO="ubuntu"
LSB_RELEASE=$(lsb_release --codename --short)
GB_PUPPET_VERSION="0.23.0"
MANIFEST="https://raw.githubusercontent.com/subvisual/subvisual-puppet/master/setup/ubuntu.pp"
OUT=/dev/null
BASE_PACKAGES="git curl puppet"

DEB="puppetlabs-release-${LSB_RELEASE}.deb"
DEB_PROVIDES="/etc/apt/sources.list.d/puppetlabs.list" # Assume that this file's existence means we have Puppet Labs repo added

echo "Setting up $(hostname) with Group Buddies setup script ${DISTRO}-${LSB_RELEASE}"

if [ ! -e $DEB_PROVIDES ]; then
  wget -P /tmp -q http://apt.puppetlabs.com/$DEB > $OUT
  dpkg -i /tmp/$DEB > $OUT
fi

echo "Installing base packages"
apt-get update > $OUT
apt-get install --yes $BASE_PACKAGES > $OUT

echo "Installing puppet module groupbuddies-gb $GB_PUPPET_VERSION"
puppet module install groupbuddies-gb --version $GB_PUPPET_VERSION > $OUT

echo "Applying deploy.pp manifest"
puppet apply -e "gb::base { 'deploy': }" > $OUT

# if this is not a vagrant machine, ask for a deploy user password
if [ ! -d "/home/vagrant" ]; then
  read -s -p "Enter a password for the deploy user (blank for none): " deploy_password
else
  deploy_password="vagrant"
fi

[ -z "$deploy_password" ] || echo "deploy:${deploy_password}" | chpasswd
echo ""

# for some reason this errors when ran in vagrant
if [ ! -d "/home/vagrant" ]; then
  echo "Cleaning up"
  rm -rf /tmp/*
fi
